//------------------------------------------------------------------------------
//  Purpose: 指令函数集 - 总线参数设置类
//  Funtion: 完成所有物理层总线参数设置函数，主要集中与 指令ID 6000 - 6100
//  Dependent:
//  Designer:
//  Date.Ver:
//------------------------------------------------------------------------------
#ifndef FUN_SETLENPARA_H
#define FUN_SETLENPARA_H
//------------------------------------------------------------------------------
// Funtion: 设置通讯IO
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 6001, ff,ff,03,03,00,ff,00
//------------------------------------------------------------------------------
int SetIoParameter_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置对ECU通讯串口波特率
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 6002, 00,00,e1,00,00
//------------------------------------------------------------------------------
int SetEcuBaudRate_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置对ECU通讯时间参数
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 6003, 00,00,01,00
//------------------------------------------------------------------------------
int SetEcuCommTimeInterval_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置总线电平（高或低）
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 6007, 00,00,19,
//------------------------------------------------------------------------------
int SetCommunicationLineVoltage_1( int argc, unsigned char *argv, unsigned char *ans );
//-----------------------------------------------------------------------------
// Funtion: 类似于Set5BpsParameter   对ECU发来的关键字不取反发回
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 6009
//-----------------------------------------------------------------------------
int BoschFiat_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置CANBUS链路保持
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 600C
//------------------------------------------------------------------------------
int SetCANBusLinkData_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置CANBUS链路保持
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 600d
//------------------------------------------------------------------------------
int SetCANBus2LinkData_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置VPW 电平
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 600E
//------------------------------------------------------------------------------
int SetVpwLogicLevel_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 获取 smartbox 产品号
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : SendCmd: 55 aa f0 f8 00 05 00 27 01 60 20 6b
//          ReceiveCmd: 00 01 00 05 05 39 38 30 35 34 30 30 39 38 30 30 30 01 02 00 01
//------------------------------------------------------------------------------
int GetBoxInfo( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion:
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 6021
//------------------------------------------------------------------------------
int GetDownloadType(int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置连路保持
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 6004, 0b,87,a8,f2,3e,ff,ff,ff,ff,ff,ff,59,0b,64
//------------------------------------------------------------------------------
int SetLinkData_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置链路保持且无需应答
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : recv: 600f 05 81 10 f1 3e 00 10 25
//                     1) 2) 3) 4) 5) 6) 7) 8)
//          1) 链路数据长度
//          2)3)4)5)6) 链路数据
//          7) 无效参数
//          8) 链路触发事件
//------------------------------------------------------------------------------
int SetLinkNoAnswer_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置接头与主机通讯波特率（无效果）
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : recv: 60,1B,06,80,98,f1,01,3e,48,06,64
//                      1) 2) 3) 4) 5) 6) 7) 8) 9)
//          1) 链路命令长度(若为0，则终止链路)
//          2) 3) 4) 5) 6) 7) 链路数据包
//          8) 未知或无意义
//          9) 其值乘10 即：0x64*10=1000（ms）为链路间隔时间，若为0，则返回错误
//          send: ff,00, 固定回 ff 00 表示成功
//------------------------------------------------------------------------------
int SetBenzHMFLinkKeep_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置Benz38接头通讯IO
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : recv: 60,16,06,
//                      1)
//          1) 通讯IO
//          send: ff,00, 表示成功
//                ff,02  表示设置失败
//------------------------------------------------------------------------------
int Benz38SelectLine_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置接头与主机通讯波特率（无效果）
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : recv: 60,19,00,00,25,00
//                      1) 2) 3) 4)
//          1)2)3)4)  通讯波特率
//          send: ff,00, 表示成功
//------------------------------------------------------------------------------
int SetConnectorBaudRate_1( int argc, unsigned char *argv, unsigned char *ans );
//------------------------------------------------------------------------------
// Funtion: 设置 多个 通讯 IO
// Input  : argc - 参数长度
//          argv - 参数
// Output : ans - 回复到上位机的数据
// Return : 回复到上位机的数据长度
// Info   : 6021
//------------------------------------------------------------------------------
int SelectMultiIoLine( int argc, unsigned char *argv, unsigned char *ans );
#endif
//--------------------------------------------------------- End Of File --------
